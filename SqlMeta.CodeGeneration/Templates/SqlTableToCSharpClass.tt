<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(ProjectDir)\Templates\SqlMeta.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@include file="Manager.tt"#>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>
<#@ output extension=".cs" #>
<#var extention = "cs";#>


<# 
    var dataRepo = new MetaRepository(manager.ConnectionString);
    var tables = dataRepo.GetTableInfo().Where(t => !t.TableName.Contains("sysdiagram")).ToList();
    var nameSpace = "EnterpriseCodeGeneration.SqlTableToCSharpClass";

foreach (var table in tables)
{
    manager.StartNewFile(String.Format("{0}.{1}", table.TableName, extention));
#>
namespace <#=nameSpace#>
{
	using System;

	public class <#=table.TableName#>
	{
	<# foreach (SqlMeta.Data.Types.SqlColumnInfo column in table.Columns)
	{#>
	public <#=Manager.GetCSharpTypeFromSqlType(sqlType:column.DataType,isNullable:column.IsNullable)#> <#=column.ColumnName#> {get;set;}
	<#}#>
}
}
	
<# manager.EndBlock(); #>

<#
}
#>

<# manager.Process(true); #>